# -*- coding: utf-8 -*-
"""challenge_sigmageek.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_YfB_3KIDJ9gK890xFzBj99cWyPuSip3
"""

""" This program answers the following question:
      Given a regular octahedron, consider the set formed by its vertices and the centers of its faces. 
      How many distinct tetrahedrons are possible to construct with vertices in this set?
"""
from sympy import Plane, Point3D

number = 1001 # combination of 4 points in 14 (6+8) possible points
numeroTetraedros = 0

P1 = [0.5, -1, 1.5]
P2 = [-1,0.5,1.5]
P3 = [0.5,2,1.5] 
P4 = [2, 0.5, 1.5]
P5 = [0.5, 0.5, 0]
P6 =  [1,1,2]
P7 = [1,0,1]
P8 = [0,0,2]
P9 = [0,1,1]
P10 = [1,0,2]
P11 = [1,1,1]
P12 = [0.5,0.5,3]
P13 = [0,1,2]
P14 = [0,0,1]

def determinant_3x3(m):
    return (m[0][0] * (m[1][1] * m[2][2] - m[1][2] * m[2][1]) -
            m[1][0] * (m[0][1] * m[2][2] - m[0][2] * m[2][1]) +
            m[2][0] * (m[0][1] * m[1][2] - m[0][2] * m[1][1]))


def subtract(a, b):
    return (a[0] - b[0],
            a[1] - b[1],
            a[2] - b[2])

def volume(a, b, c, d):
    return determinant_3x3((subtract(a, b),
                                 subtract(b, c),
                                 subtract(c, d),
                                 ))


setpoints = [P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14]
setpoints_new = []

for a in setpoints :
  for b in setpoints:
    for c in setpoints:
      for d in setpoints:
        if b != a  and c!= b and c != a and  d != c and d != a and  d != b:
            V = volume(a, b, c, d)
            if V != 0:
              numeroTetraedros += 1

numeroTetraedros /= (4*3*2)
print(numeroTetraedros)